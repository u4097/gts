apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "ru.panmin.gtspro"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "0.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        signingConfig signingConfigs.debug
        multiDexEnabled true
    }

    File releaseSignFile = rootProject.file('release_keystore.properties')
    Properties releaseSignProperties = new Properties()
    if (releaseSignFile.exists()) {
        releaseSignProperties.load(new FileInputStream(releaseSignFile))
    }

    signingConfigs {
        release {
            storeFile file('keystore/' + releaseSignProperties['keystore'])
            storePassword releaseSignProperties['storePassword']
            keyAlias releaseSignProperties['keyAlias']
            keyPassword releaseSignProperties['keyPassword']
        }

        debug {
            storeFile file('keystore/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            versionNameSuffix
            debuggable true
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //== multidex ==//
    implementation "com.android.support:multidex:${multidexVersion}"
    androidTestImplementation "com.android.support:multidex:${multidexVersion}"
    androidTestImplementation "com.android.support:multidex-instrumentation:${multidexVersion}"

    //== android support ==//
    implementation "com.android.support:design:${androidSupportVersion}"
    implementation "com.android.support:support-vector-drawable:${androidSupportVersion}"
    implementation "com.android.support:appcompat-v7:${androidSupportVersion}"
    implementation "com.android.support:support-v4:${androidSupportVersion}"
    implementation "com.android.support:recyclerview-v7:${androidSupportVersion}"
    implementation "com.android.support:cardview-v7:${androidSupportVersion}"
    implementation "com.android.support:customtabs:${androidSupportVersion}"
    implementation "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}"

    //== retrofit ==//
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"

    implementation "io.nlopez.smartlocation:library:${smartLocationVersion}"
    implementation "io.nlopez.smartlocation:rx:${smartLocationVersion}"

    //== rx ==//
    implementation "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"
    implementation "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}"
    implementation "com.github.tbruyelle:rxpermissions:${rxPermissionsVersion}"
    implementation "com.annimon:stream:${streamVersion}"

    //== butter knife ==//
    implementation "com.jakewharton:butterknife:${butterKnifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"

    //== dagger ==//
    implementation "com.google.dagger:dagger:${daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${daggerVersion}"

    //== glide ==//
    implementation "com.github.bumptech.glide:glide:${glideVersion}"
    annotationProcessor "com.github.bumptech.glide:compiler:${glideVersion}"

    //== multi picker ==//
    implementation "com.kbeanie:multipicker:${multiPickerVersion}"

    //== material dialogs ==//
    implementation "com.afollestad.material-dialogs:core:${materialDialogsVersion}"

    //== material search view ==//
    implementation "com.miguelcatalan:materialsearchview:${materialSearchViewVersion}"

    //== keyboard visibility event listener ==//
    implementation "net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:${keyboardVisibilityEventVersion}"

    //==ExpandableLayout==//
    implementation "net.cachapa.expandablelayout:expandablelayout:${expandablelayout_version}"

    //== logger ==//
    implementation "com.jakewharton.timber:timber:${timberVersion}"
    implementation("com.github.ihsanbal:LoggingInterceptor:${loggingInterceptorVersion}") {
        exclude group: 'org.json', module: 'json'
    }
    debugImplementation "com.readystatesoftware.chuck:library:${chuckVersion}"
    releaseImplementation "com.readystatesoftware.chuck:library-no-op:${chuckVersion}"
}